<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd

	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-4.0.xsd"> 
    <!-- web.xml中shiro的filter对应的bean -->
	<!-- Shiro 的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!--将安全管理器配置进来  -->
		<property name="securityManager" ref="securityManager" />
		<!--配置各种情况下的访问地址  -->
		<!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
		<property name="loginUrl" value="/login" />
		<!-- 认证成功请求first路径，若不配置，shiro认证成功自动到上一个请求路径 -->
		<!-- <property name="successUrl" value="/first"/> -->
		<!-- 通过unauthorizedUrl指定没有权限操作时跳转页面-->
		<property name="unauthorizedUrl" value="/refuse" />
		<!-- 自定义filter配置 -->
		<!-- <property name="filters">
			<map>
				将自定义 的FormAuthenticationFilter注入shiroFilter中
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</map>
		</property> -->
		
		<!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边，从数据库中读出最好 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置匿名访问 -->
				/statics/**=anon
				<!--提示无权限的页面请求路径设置匿名访问  -->
				/refuse=anon
				/main=anon 
				/tologin=anon
				<!-- 直接访问此地址就注销了，shiro帮我们清空session,访问地址为 “/” -->
				/logout=logout

				/=anon
				/warelist=anon
				/addware=user 
				<!-- 所有路径都被拦截包括静态资源 ，从上到下的顺序-->
				/**=authc
			</value>
		</property>
	</bean>
	<!--若web.xml设置filter有spring管理  -->
	<!-- <bean id="lifecycleBeanPostProcessor" 
		class="org.apache.shiro.spring.lifecycleBeanPostProcessor"/> -->
    <!-- securityManager安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 指定realm -->	
		<property name="realm" ref="MyRealm" />
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"/>
		<!-- 注入session管理器 -->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 记住我 -->
		<property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>
	
	<!-- realm 	注入自定义realm  -->
	<bean id="MyRealm" class="com.shiro.realm.MyRealm">
		<!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
		<property name="credentialsMatcher" ref="credentialsMatcher"/>
	</bean>
	
	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5" />
		<!-- 加密次数 -->
		<property name="hashIterations" value="1" />
	</bean>
	<!-- 再controller使用注解后,如果没有权限，会直接再浏览器报没有权限的异常，配置此UnauthorizedException异常处理器 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	    <property name="exceptionMappings">
	        <props>
	            <prop key="org.apache.shiro.authz.UnauthorizedException">/refuse</prop>
	        </props>
	    </property>
	</bean>
	<!-- 缓存管理器 -->
  	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    	<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/>
    </bean> 

	<!-- 会话管理器 -->
   <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="600000"/>
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
    </bean>
   <!--  <bean id="sessionDao" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO" />
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDao" ref="sessionDao"></property>
    </bean> -->

	<!-- 自定义form认证过虑器 -->
	<!-- 基于Form表单的身份验证过滤器，不配置将也会注册此过虑器，表单中的用户账号、密码及loginurl将采用默认值，建议配置 -->
	<bean id="formAuthenticationFilter" 
		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
			<!-- 表单中账号的input名称 -->
			<property name="usernameParam" value="username" />
			<!-- 表单中密码的input名称 -->
			<property name="passwordParam" value="password" />
			<!-- 记住我input的名称 -->
			<property name="rememberMeParam" value="rememberMe"/>
	 </bean>
	 
	<!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- 记住我cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- rememberMe是cookie的名字 -->
		<constructor-arg value="rememberMe" />
		<!-- 记住我cookie生效时间30天 -->
		<property name="maxAge" value="2592000" />
	</bean>
	
</beans>